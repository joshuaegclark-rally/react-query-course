diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
index 0000000..13566b8
--- /dev/null
+++ b/.idea/.gitignore
@@ -0,0 +1,8 @@
+# Default ignored files
+/shelf/
+/workspace.xml
+# Editor-based HTTP Client requests
+/httpRequests/
+# Datasource local storage ignored files
+/dataSources/
+/dataSources.local.xml
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
index 0000000..639900d
--- /dev/null
+++ b/.idea/misc.xml
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectRootManager">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
index 0000000..39ad310
--- /dev/null
+++ b/.idea/modules.xml
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/react-query-course.iml" filepath="$PROJECT_DIR$/.idea/react-query-course.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
diff --git a/.idea/react-query-course.iml b/.idea/react-query-course.iml
new file mode 100644
index 0000000..d6ebd48
--- /dev/null
+++ b/.idea/react-query-course.iml
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$" />
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
index 0000000..35eb1dd
--- /dev/null
+++ b/.idea/vcs.xml
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
diff --git a/package-lock.json b/package-lock.json
index 753ec12..3d16b42 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -12,7 +12,7 @@
         "react": "^17.0.2",
         "react-dom": "^17.0.2",
         "react-icons": "^4.3.1",
-        "react-query": "^4.0.0-alpha.18",
+        "react-query": "^4.0.0-beta.3",
         "react-router-dom": "^6.1.1"
       },
       "devDependencies": {
@@ -394,11 +394,11 @@
       }
     },
     "node_modules/@babel/runtime": {
-      "version": "7.16.3",
-      "resolved": "https://registry.npmjs.org/@babel/runtime/-/runtime-7.16.3.tgz",
-      "integrity": "sha512-WBwekcqacdY2e9AF/Q7WLFUWmdJGJTkbjqTjoMDgXkVZ3ZRUvOPsLb5KdwISoQVsbP+DQzVZW4Zhci0DvpbNTQ==",
+      "version": "7.21.0",
+      "resolved": "https://registry.npmjs.org/@babel/runtime/-/runtime-7.21.0.tgz",
+      "integrity": "sha512-xwII0//EObnq89Ji5AKYQaRYiW/nZ3llSv29d49IuxPhKbtJoLP+9QUUZ4nVragQVtaVGeZrpB+ZtG/Pdy/POw==",
       "dependencies": {
-        "regenerator-runtime": "^0.13.4"
+        "regenerator-runtime": "^0.13.11"
       },
       "engines": {
         "node": ">=6.9.0"
@@ -531,6 +531,11 @@
         "@types/node": "*"
       }
     },
+    "node_modules/@types/use-sync-external-store": {
+      "version": "0.0.3",
+      "resolved": "https://registry.npmjs.org/@types/use-sync-external-store/-/use-sync-external-store-0.0.3.tgz",
+      "integrity": "sha512-EwmlvuaxPNej9+T4v5AuBPJa2x2UOJVdjCtDHgcDqitUeOtjnJKJ+apYjVcAoBEMjKW1VVFGZLUb5+qqa09XFA=="
+    },
     "node_modules/@uidotdev/react-query-api": {
       "version": "0.1.18",
       "resolved": "https://registry.npmjs.org/@uidotdev/react-query-api/-/react-query-api-0.1.18.tgz",
@@ -2217,20 +2222,22 @@
       }
     },
     "node_modules/react-query": {
-      "version": "4.0.0-alpha.18",
-      "resolved": "https://registry.npmjs.org/react-query/-/react-query-4.0.0-alpha.18.tgz",
-      "integrity": "sha512-yeMFhn+1tBCxFnQnvK2mW9j0jXgrBKZWXsjObGGyNZDrgTPzkjcF+iW6KBXimVRLg4DH/3Knjw5hj8WmPLbDNg==",
+      "version": "4.0.0-beta.23",
+      "resolved": "https://registry.npmjs.org/react-query/-/react-query-4.0.0-beta.23.tgz",
+      "integrity": "sha512-e6mNBVAYGy0M1OwX0mhRB/lCkOedKeqTUrbPjNCqvm8hQGUsJJobqfHVvTv8o6JJaOO2MFcxKF4vZM+PEKbHZA==",
       "dependencies": {
-        "@babel/runtime": "^7.5.5",
+        "@babel/runtime": "^7.17.9",
+        "@types/use-sync-external-store": "^0.0.3",
         "broadcast-channel": "^3.4.1",
-        "match-sorter": "^6.0.2"
+        "match-sorter": "^6.0.2",
+        "use-sync-external-store": "^1.1.0"
       },
       "funding": {
         "type": "github",
         "url": "https://github.com/sponsors/tannerlinsley"
       },
       "peerDependencies": {
-        "react": "^16.8.0 || ^17.0.0"
+        "react": "^16.8.0 || ^17.0.0 || ^18.0.0"
       },
       "peerDependenciesMeta": {
         "react-dom": {
@@ -2299,9 +2306,9 @@
       }
     },
     "node_modules/regenerator-runtime": {
-      "version": "0.13.9",
-      "resolved": "https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.13.9.tgz",
-      "integrity": "sha512-p3VT+cOEgxFsRRA9X4lkI1E+k2/CtnKtU4gcxyaCUreilL/vqI6CdZ3wxVUx3UOUg+gnUOQQcRI7BmSI656MYA=="
+      "version": "0.13.11",
+      "resolved": "https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.13.11.tgz",
+      "integrity": "sha512-kY1AZVr2Ra+t+piVaJ4gxaFaReZVH40AKNo7UCX6W+dEwBo/2oZJzqfuN1qLq1oL45o56cPaTXELwrTh8Fpggg=="
     },
     "node_modules/remove-accents": {
       "version": "0.4.2",
@@ -2633,6 +2640,14 @@
         "detect-node": "^2.0.4"
       }
     },
+    "node_modules/use-sync-external-store": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/use-sync-external-store/-/use-sync-external-store-1.2.0.tgz",
+      "integrity": "sha512-eEgnFxGQ1Ife9bzYs6VLi8/4X6CObHMw9Qr9tPY43iKwsPw8xE8+EFsf/2cFZ5S3esXgpWgtSCtLNS41F+sKPA==",
+      "peerDependencies": {
+        "react": "^16.8.0 || ^17.0.0 || ^18.0.0"
+      }
+    },
     "node_modules/util-deprecate": {
       "version": "1.0.2",
       "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
@@ -3059,11 +3074,11 @@
       }
     },
     "@babel/runtime": {
-      "version": "7.16.3",
-      "resolved": "https://registry.npmjs.org/@babel/runtime/-/runtime-7.16.3.tgz",
-      "integrity": "sha512-WBwekcqacdY2e9AF/Q7WLFUWmdJGJTkbjqTjoMDgXkVZ3ZRUvOPsLb5KdwISoQVsbP+DQzVZW4Zhci0DvpbNTQ==",
+      "version": "7.21.0",
+      "resolved": "https://registry.npmjs.org/@babel/runtime/-/runtime-7.21.0.tgz",
+      "integrity": "sha512-xwII0//EObnq89Ji5AKYQaRYiW/nZ3llSv29d49IuxPhKbtJoLP+9QUUZ4nVragQVtaVGeZrpB+ZtG/Pdy/POw==",
       "requires": {
-        "regenerator-runtime": "^0.13.4"
+        "regenerator-runtime": "^0.13.11"
       }
     },
     "@babel/template": {
@@ -3181,6 +3196,11 @@
         "@types/node": "*"
       }
     },
+    "@types/use-sync-external-store": {
+      "version": "0.0.3",
+      "resolved": "https://registry.npmjs.org/@types/use-sync-external-store/-/use-sync-external-store-0.0.3.tgz",
+      "integrity": "sha512-EwmlvuaxPNej9+T4v5AuBPJa2x2UOJVdjCtDHgcDqitUeOtjnJKJ+apYjVcAoBEMjKW1VVFGZLUb5+qqa09XFA=="
+    },
     "@uidotdev/react-query-api": {
       "version": "0.1.18",
       "resolved": "https://registry.npmjs.org/@uidotdev/react-query-api/-/react-query-api-0.1.18.tgz",
@@ -4352,13 +4372,15 @@
       "requires": {}
     },
     "react-query": {
-      "version": "4.0.0-alpha.18",
-      "resolved": "https://registry.npmjs.org/react-query/-/react-query-4.0.0-alpha.18.tgz",
-      "integrity": "sha512-yeMFhn+1tBCxFnQnvK2mW9j0jXgrBKZWXsjObGGyNZDrgTPzkjcF+iW6KBXimVRLg4DH/3Knjw5hj8WmPLbDNg==",
+      "version": "4.0.0-beta.23",
+      "resolved": "https://registry.npmjs.org/react-query/-/react-query-4.0.0-beta.23.tgz",
+      "integrity": "sha512-e6mNBVAYGy0M1OwX0mhRB/lCkOedKeqTUrbPjNCqvm8hQGUsJJobqfHVvTv8o6JJaOO2MFcxKF4vZM+PEKbHZA==",
       "requires": {
-        "@babel/runtime": "^7.5.5",
+        "@babel/runtime": "^7.17.9",
+        "@types/use-sync-external-store": "^0.0.3",
         "broadcast-channel": "^3.4.1",
-        "match-sorter": "^6.0.2"
+        "match-sorter": "^6.0.2",
+        "use-sync-external-store": "^1.1.0"
       }
     },
     "react-refresh": {
@@ -4403,9 +4425,9 @@
       }
     },
     "regenerator-runtime": {
-      "version": "0.13.9",
-      "resolved": "https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.13.9.tgz",
-      "integrity": "sha512-p3VT+cOEgxFsRRA9X4lkI1E+k2/CtnKtU4gcxyaCUreilL/vqI6CdZ3wxVUx3UOUg+gnUOQQcRI7BmSI656MYA=="
+      "version": "0.13.11",
+      "resolved": "https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.13.11.tgz",
+      "integrity": "sha512-kY1AZVr2Ra+t+piVaJ4gxaFaReZVH40AKNo7UCX6W+dEwBo/2oZJzqfuN1qLq1oL45o56cPaTXELwrTh8Fpggg=="
     },
     "remove-accents": {
       "version": "0.4.2",
@@ -4652,6 +4674,12 @@
         "detect-node": "^2.0.4"
       }
     },
+    "use-sync-external-store": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/use-sync-external-store/-/use-sync-external-store-1.2.0.tgz",
+      "integrity": "sha512-eEgnFxGQ1Ife9bzYs6VLi8/4X6CObHMw9Qr9tPY43iKwsPw8xE8+EFsf/2cFZ5S3esXgpWgtSCtLNS41F+sKPA==",
+      "requires": {}
+    },
     "util-deprecate": {
       "version": "1.0.2",
       "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
diff --git a/src/components/IssueDetails.jsx b/src/components/IssueDetails.jsx
index 1616ded..75284da 100644
--- a/src/components/IssueDetails.jsx
+++ b/src/components/IssueDetails.jsx
@@ -1,7 +1,15 @@
 import { useParams } from "react-router-dom";
 
-export default function IssueDetails() {
+export default function IssueDetails(props) {
+  const { issue } = props;
   const { number } = useParams();
 
-  return <h1>Issue {number}</h1>;
+  return (
+    <div>
+      <h1>
+        Issue {number}
+      </h1>
+
+    </div>
+  );
 }
diff --git a/src/components/IssueListItem.jsx b/src/components/IssueListItem.jsx
new file mode 100644
index 0000000..c0dc519
--- /dev/null
+++ b/src/components/IssueListItem.jsx
@@ -0,0 +1,49 @@
+import {GoComment, GoIssueClosed, GoIssueOpened} from 'react-icons/all';
+import {Link} from 'react-router-dom';
+import {relativeDate} from '../helpers/relativeDate';
+
+export default function IssueListItem(props) {
+  const {
+    assignee,
+    comments,
+    createdBy,
+    createdDate,
+    labels,
+    number,
+    title,
+  } = props;
+
+  return (
+    <li>
+      {['done', 'cancelled'].includes(status) ? (
+        <GoIssueClosed style={{color: 'red'}}/>
+      ) : (
+        <GoIssueOpened style={{color: 'green'}}/>
+      )}
+      <div className="issue-content">
+        <span>
+          <Link to="/issue/1">
+            {title}
+          </Link>
+          {labels.map(label => (
+            <span key={label} className={`label red`}>
+              {label}
+            </span>
+          ))}
+        </span>
+        <small>
+          #{number} opened {relativeDate(createdDate)} by {createdBy}
+        </small>
+      </div>
+      {assignee ? <div>{assignee}</div> : null}
+      <span className="comment-count">
+        {comments.length > 0 ? (
+          <>
+            <GoComment/>
+            {comments.length}
+          </>
+        ) : null}
+      </span>
+    </li>
+  );
+}
\ No newline at end of file
diff --git a/src/components/IssuesList.jsx b/src/components/IssuesList.jsx
index f1822db..e2973bf 100644
--- a/src/components/IssuesList.jsx
+++ b/src/components/IssuesList.jsx
@@ -1,13 +1,40 @@
 import { Link } from "react-router-dom";
+import { GoIssueOpened, GoIssueClosed, GoComment, } from 'react-icons/all';
+import {relativeDate} from '../helpers/relativeDate';
+import IssueListItem from './IssueListItem';
+
+export default function IssuesList(props) {
+  const { issues } = props;
 
-export default function IssuesList() {
   return (
     <div>
-      <h1>Issues List</h1>
-      <ul>
-        <li>
-          <Link to="/issue/1">Issue 1</Link>
-        </li>
+      <h2>Issues List</h2>
+      <ul className="issues-list">
+        {issues.map((issue, index) => {
+          const {
+            assignee,
+            comments,
+            createdBy,
+            createdDate,
+            labels,
+            number,
+            status,
+            title,
+          } = issue;
+          return (
+            <IssueListItem
+              key={`issue-${index}-${title}`}
+              assignee={assignee}
+              comments={comments}
+              createdBy={createdBy}
+              createdDate={createdDate}
+              labels={labels}
+              number={number}
+              status={status}
+              title={title}
+            />
+          );
+        })}
       </ul>
     </div>
   );
diff --git a/src/main.jsx b/src/main.jsx
index 320aeed..c0cef18 100644
--- a/src/main.jsx
+++ b/src/main.jsx
@@ -1,10 +1,12 @@
 import React from "react";
 import ReactDOM from "react-dom";
+import { QueryClient, QueryClientProvider } from 'react-query';
 import "./index.css";
 import App from "./App";
 import { BrowserRouter } from "react-router-dom";
 import { worker } from "@uidotdev/react-query-api";
 
+const client = new QueryClient();
 new Promise((res) => setTimeout(res, 100))
   .then(() =>
     worker.start({
@@ -15,11 +17,13 @@ new Promise((res) => setTimeout(res, 100))
   .then(() => {
     ReactDOM.render(
       <React.StrictMode>
-        <BrowserRouter>
-          <div className="container">
-            <App />
-          </div>
-        </BrowserRouter>
+        <QueryClientProvider client={client}>
+          <BrowserRouter>
+            <div className="container">
+              <App />
+            </div>
+          </BrowserRouter>
+        </QueryClientProvider>
       </React.StrictMode>,
       document.getElementById("root")
     );
diff --git a/src/pages/Issue.jsx b/src/pages/Issue.jsx
index 12a7331..bfedf0b 100644
--- a/src/pages/Issue.jsx
+++ b/src/pages/Issue.jsx
@@ -1,5 +1,6 @@
 import IssueDetails from "../components/IssueDetails";
 
-export default function Issue() {
-  return <IssueDetails />;
+export default function Issue(props) {
+  const { issue } = props;
+  return <IssueDetails issue={issue} />;
 }
diff --git a/src/pages/Issues.jsx b/src/pages/Issues.jsx
index 711f230..99ab750 100644
--- a/src/pages/Issues.jsx
+++ b/src/pages/Issues.jsx
@@ -1,12 +1,28 @@
+import { useQuery } from 'react-query';
 import IssuesList from "../components/IssuesList";
 import LabelList from "../components/LabelList";
+
+const url = '/api/issues';
+function fetchIssues() {
+  return fetch(url).then(res => res.json());
+}
+
 export default function Issues() {
+  /**
+   * @param data {{ assignee: any, comments: Array<string>, completedDate: any, createdBy: string, createdDate: string, dueDate: string, id: string, labels: Array<string>, number: number, status: string, title: string }}
+   */
+  const { data, isLoading, isError, error } = useQuery(
+    ['issues'],
+    fetchIssues,
+  );
+  console.log('data', data);
+
   return (
     <div>
       <main>
         <section>
           <h1>Issues</h1>
-          <IssuesList />
+          {isLoading ? <p>Loading...</p> : <IssuesList issues={data} />}
         </section>
         <aside>
           <LabelList />
